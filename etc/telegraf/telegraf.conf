
[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = true 

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.cisco_telemetry_gnmi]]
  addresses = ["$HOST_1_SOCKET", "$HOST_2_SOCKET"]

  ## define credentials
  username = "$USERNAME"
  password = "$PASSWORD"

  ## redial in case of failures after
  redial = "10s"

    # Empty tag to be filled with hostname by processor plugin
    [inputs.cisco_telemetry_gnmi.tags]
      host_name = ""

################ Subscriptions
  [[inputs.cisco_telemetry_gnmi.subscription]]
    name = "Cisco-IOS-XR-controller-optics-oper:/optics-oper/optics-ports/optics-port/optics-info"
    origin = "Cisco-IOS-XR-controller-optics-oper"
    path = "/optics-oper/optics-ports/optics-port/optics-info"
    subscription_mode = "sample"
    sample_interval = "300s"

  [[inputs.cisco_telemetry_gnmi.subscription]]
    name = "Cisco-IOS-XR-controller-otu-oper:/otu/controllers/controller/info"
    origin = "Cisco-IOS-XR-controller-otu-oper"
    path = "/otu/controllers/controller/info"
    subscription_mode = "sample"
    sample_interval = "60s"

###############################################################################
#                            PROCESSOR PLUGINS                                #
###############################################################################

# Mapping IP address to hostname
[[processors.enum]]
  namepass = ["Cisco-IOS-XR-controller-optics-oper:/optics-oper/optics-ports/optics-port/optics-info",
              "Cisco-IOS-XR-controller-otu-oper:/otu/controllers/controller/info"]

  [[processors.enum.mapping]]
    tag = "source"
    dest = "host_name"

      [processors.enum.mapping.value_mappings]
        "$HOST_1_IP" = "$HOST_1_NAME"
        "$HOST_2_IP" = "$HOST_2_NAME"


###############################################################################
#                            PROCESSOR PLUGINS                                #
###############################################################################

[[processors.strings]]
  namepass = ["Cisco-IOS-XR-controller-otu-oper:/otu/controllers/controller/info"]
#   ## Trim trailing characters in cutset
  [[processors.strings.trim_right]]
    field = "qmargin"
    cutset = "dB"


[[processors.converter]]
  namepass = ["Cisco-IOS-XR-controller-otu-oper:/otu/controllers/controller/info"]
  [processors.converter.fields]
    # convert string field to integer for Grafana visualization
    integer = ["qfactor", "qmargin"]


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  namepass = ["Cisco-IOS-XR-controller-otu-oper:/otu/controllers/controller/info"]

  files = ["/tmp/dci-demo.out"]
  
  rotation_max_size = "10MB"
  rotation_max_archives = 2

  data_format = "json"
  json_timestamp_units = "1s"



###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb]]

  urls = ["http://127.0.0.1:8086"]
  skip_database_creation = false
  database = "mdt_metrics"
